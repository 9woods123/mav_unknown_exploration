#Config for 3D Reconstruction Planner

# replan_pos_threshold: 0.15
# replan_yaw_threshold: 0.15

replan_pos_threshold: 1.2
replan_yaw_threshold: 1.2

max_new_segments: 0
min_new_segments: 0
max_new_tries: 0
min_new_tries: 0
min_new_value: 0

multi_or_singe_step: true       ##true :  excuted 
multi_step_length: 3
verbose_modules: true
build_modules_on_init: true
expand_batch: 1
visualize_gain: true
highlight_executed_trajectory: true

map:
  type: "VoxbloxMap"

system_constraints:
  v_max: 2.5
  a_max: 2.25
  yaw_rate_max: 5           ##1.6
  yaw_accel_max: 4           ##1.6
  collision_radius: 0.75

trajectory_generator:
  collision_optimistic: false
  bounding_volume_args: "/map_bounding_volume"
  clearing_radius: 0                 ## 0

  type: "FeasibleRRTStar"
  all_semgents_feasible: false
  crop_segments: true
  crop_margin: 0.3             ##0.3
  crop_min_length: 0.5         ##0.5
  min_path_length: 1          ##0.5
  max_extension_range: 2.7             ##1.7
  maximum_tries: 1000
  sampling_rate: 20.0
  sample_yaw: true

  sampling_mode: "semilocal"
  semilocal_sampling_count: 40
  semilocal_sampling_radius_max: 3.5        ##1.5
  semilocal_sampling_radius_min: 1            ##1.5

  rewire_root: true
  rewire_intermediate: true
  reinsert_root: true
  max_rewire_range: 4          ##3
  max_density_range: 2.2     ##1.3
  n_neighbors: 20             ##20

  generator_updater:
    type: "RecheckCollision"

trajectory_evaluator:
  type: "RRTStarEvaluatorAdapter"

  following_evaluator:
    type: "ContinuousYawPlanningEvaluator"
    n_directions: 8                    ##12
    n_sections_fov: 1                ##3
    update_range: 4.5            ##3 
    update_gain: 0.0
    update_sections_separate: false
    
    following_evaluator:
      type: "NaiveEvaluator"
      visualize_sensor_view: false
      bounding_volume_args: "/target_bounding_volume"

    # following_evaluator:
    #   type: "VoxelWeightEvaluator"
    #   visualize_sensor_view: true
    #   accurate_frontiers: true
    #   checking_distance: 2.0
    #   bounding_volume_args: "/target_bounding_volume"
    #   camera_params_ns: "/unreal/unreal_ros_client/camera_params"

    #   frontier_voxel_weight: 1.0
    #   new_voxel_weight: 0.0
    #   min_impact_factor: 0.01
    #   ray_angle_x: 0.002454
    #   ray_angle_y: 0.002681

      sensor_model:
        type: "IterativeRayCaster"
        sampling_time: 0.0
        ray_length: 5
        focal_length: 320.0
        resolution_x: 640 # 640-90/172-30/127-22.5 deg fov
        resolution_y: 480
        field_of_view_x: 1.57    ##PI/2
        field_of_view_Y: 1.04                                      
        downsampling_factor: 5.0
     ##  setParam<double>(param_map, "field_of_view_x", &c_field_of_view_x_, 2.0 * atan2(p_resolution_x_, p_focal_length_ * 2.0));
     #setParam<double>(param_map, "field_of_view_y", &c_field_of_view_y_, 2.0 * atan2(p_resolution_y_, p_focal_length_ * 2.0));     
      cost_computer:
        type: "SegmentLength"
        accumulate: false                   

      value_computer:
        type: "GlobalNormalizedGain"
        cost_function: "x"

  #       if (cost > 0) {
  #   if (cost_function_=="x")
  #   {
  #   value = gain /cost;
  #   }
  #   else if (cost_function_=="logx")
  #   {
  #   value = gain /std::log2 (cost/1.5+1);
  #   }
  #   else if (cost_function_=="x^2")
  #   {
  #   value = gain /(cost*cost);
  #   }
  #   else if (cost_function_=="e^(-x)")
  #   {
  #   value = gain*std::exp(-cost);
  #   }
  # }
      next_selector:
        type: "MultiStep"
        # type: "SubsequentBest"




back_tracker:
  type: "RotateReverse"
  turn_rate: 1.6
  update_rate: 0.5
  sampling_rate: 20.0
  n_rotations: 0
  stack_size: 10

